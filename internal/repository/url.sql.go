// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: url.sql

package repository

import (
	"context"
)

const createUrl = `-- name: CreateUrl :one
INSERT INTO urls (id, long_url)
VALUES ($1, $2)
RETURNING id, long_url, created_at, is_custom
`

type CreateUrlParams struct {
	ID      string `json:"id"`
	LongUrl string `json:"longUrl"`
}

// CreateUrl
//
//	INSERT INTO urls (id, long_url)
//	VALUES ($1, $2)
//	RETURNING id, long_url, created_at, is_custom
func (q *Queries) CreateUrl(ctx context.Context, arg CreateUrlParams) (Url, error) {
	row := q.db.QueryRow(ctx, createUrl, arg.ID, arg.LongUrl)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.LongUrl,
		&i.CreatedAt,
		&i.IsCustom,
	)
	return i, err
}

const getLongUrl = `-- name: GetLongUrl :one
SELECT long_url
  FROM urls
 WHERE id = $1
 LIMIT 1
`

// GetLongUrl
//
//	SELECT long_url
//	  FROM urls
//	 WHERE id = $1
//	 LIMIT 1
func (q *Queries) GetLongUrl(ctx context.Context, id string) (string, error) {
	row := q.db.QueryRow(ctx, getLongUrl, id)
	var long_url string
	err := row.Scan(&long_url)
	return long_url, err
}
